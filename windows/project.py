# -*- coding: utf-8 -*-
# """
# /***************************************************************************
#  Load
#                                  A QGIS plugin
#  This window can be used to load SenseHawk projects needing quality check.
#  Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
#                              -------------------
#         begin                : 2022-08-25
#         git sha              : $Format:%H$
#         copyright            : (C) 2022 by SenseHawk
#         email                : kiranh@sensehawk.com
#  ***************************************************************************/
#
# /***************************************************************************
#  *                                                                         *
#  *   This program is free software; you can redistribute it and/or modify  *
#  *   it under the terms of the GNU General Public License as published by  *
#  *   the Free Software Foundation; either version 2 of the License, or     *
#  *   (at your option) any later version.                                   *
#  *                                                                         *
#  ***************************************************************************/
# """

from ..sensehawk_apis.core_apis import get_ortho_tiles_url, get_project_geojson, get_project_details
from ..sensehawk_apis.terra_apis import get_terra_classmaps

from ..utils import download_file, load_vectors, categorize_layer , group_details, combobox_modifier

from ..tasks import loadTask

from ..windows.terra_tools import TerraToolsWindow
from ..windows.therm_tools import ThermToolsWindow

import os
import json
import tempfile
import json

from qgis.PyQt import QtGui, QtWidgets, uic
from qgis.core import QgsMessageLog, Qgis, QgsProject, QgsRasterLayer, QgsVectorLayer, QgsRectangle, QgsFeature, \
    QgsGeometry, QgsField, QgsCategorizedSymbolRenderer, QgsApplication, QgsTask
from qgis.PyQt.QtCore import Qt, QVariant
from qgis.gui import QgsMessageBar
from PyQt5.QtWidgets import QLineEdit, QCompleter, QVBoxLayout, QPushButton, QComboBox
import qgis
from PyQt5 import QtCore
from qgis.utils import iface
import time
import requests


PROJECT_UI, _ = uic.loadUiType(os.path.join(os.path.dirname(__file__), 'project.ui'))


class ProjectWindow(QtWidgets.QDockWidget, PROJECT_UI):
    def __init__(self, home_obj, iface):
        """Constructor."""
        super(ProjectWindow, self).__init__()
        self.setupUi(self)
        self.home_windowObj = home_obj
        self.iface = iface
        token = self.home_windowObj.core_token
        self.iface.addDockWidget(Qt.LeftDockWidgetArea, self)
        org_uid = self.home_windowObj.org_uid
        asset_uid = self.home_windowObj.asset_uid
        self.group_details = group_details(asset_uid, org_uid, token)
        group_list = list(self.group_details.keys())
        self.group_combobox = self.group
        self.group = combobox_modifier(self.group_combobox, group_list)
        self.homebutton.clicked.connect(self.show_home_window)
        # self.group_combobox = QComboBox(self)
        # self.group_combobox.setGeometry(60,20,280,25)
        # self.widget(self.group_combobox)
        # self.setGeometry(20,10, 321, 21)

    def show_home_window(self):
        self.home_windowObj.show()
        self.hide()
        