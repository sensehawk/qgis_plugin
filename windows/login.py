# -*- coding: utf-8 -*-
# """
# /***************************************************************************
#  Login
#                                  A QGIS plugin
#  This window can be used to login to SenseHawk platform.
#  Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
#                              -------------------
#         begin                : 2022-08-25
#         git sha              : $Format:%H$
#         copyright            : (C) 2022 by SenseHawk
#         email                : kiranh@sensehawk.com
#  ***************************************************************************/
#
# /***************************************************************************
#  *                                                                         *
#  *   This program is free software; you can redistribute it and/or modify  *
#  *   it under the terms of the GNU General Public License as published by  *
#  *   the Free Software Foundation; either version 2 of the License, or     *
#  *   (at your option) any later version.                                   *
#  *                                                                         *
#  ***************************************************************************/
# """

from ..sensehawk_apis.core_apis import core_login
from ..windows.home import HomeWindow

from qgis.PyQt import QtWidgets, uic, QtGui
from qgis.core import QgsMessageLog, Qgis, QgsTask, QgsApplication
from qgis.PyQt.QtCore import Qt, QCoreApplication, QSize

from ..tasks import loginTask
# from ..utils import organization_details
import os

class LoginWindow(QtWidgets.QWidget):

    def __init__(self, iface):
        """Constructor."""
        super(LoginWindow, self).__init__()
        uic.loadUi(os.path.join(os.path.dirname(__file__), 'login.ui'), self)
        self.loginButton.setText('ðŸ‘‰ Login')
        self.loginButton.clicked.connect(self.start_login_task)
        self.user_email = None
        self.user_password = None
        self.core_token = None
        self.iface = iface

        self.load_window = None
        self.dock_widget = QtWidgets.QDockWidget()
        # Add to the left docking area by default
        logo_label = QtWidgets.QLabel(self)
        logo = QtGui.QPixmap(os.path.join(os.path.dirname(__file__), 'icon.svg'))
        logo = logo.scaled(300, 60, Qt.AspectRatioMode.KeepAspectRatioByExpanding)
        logo_label.setPixmap(logo)
        logo_label.setAlignment(Qt.AlignCenter)
        logo_label.show()
        self.layout.addWidget(logo_label)
        self.dock_widget.setWidget(self)
        self.dock_widget.setMinimumSize(QSize(300, 380))
        # self.dock_widget.setFixedSize(330, 700)
        self.iface.addDockWidget(Qt.LeftDockWidgetArea, self.dock_widget)
        self.canvas_logger('Welcome to Sensehawk Qgis plugin')

    def logger(self, message, level=Qgis.Info):
        QgsMessageLog.logMessage(message, 'SenseHawk QC', level=level)

    def canvas_logger(self, message, level=Qgis.Info):
        self.iface.messageBar().clearWidgets()
        self.iface.messageBar().pushMessage(message, level=level, duration=3)
        QgsMessageLog.logMessage(message, 'SenseHawk QC', level=level)

    def login_callback(self, login_task_status, login_task):
        if login_task_status != 3:
            return None
        if not login_task.returned_values:
            self.canvas_logger("Check username and password", level=Qgis.Warning)
            return None
        self.show_load_window()

    def start_login_task(self):
        self.canvas_logger('Initiated login process')
        login_task = QgsTask.fromFunction("Login", loginTask, login_window=self)
        QgsApplication.taskManager().addTask(login_task)
        login_task.statusChanged.connect(lambda login_task_status: self.login_callback(login_task_status, login_task))

    def show_load_window(self):
        # Initialize load save window (next window post login)
        self.load_window = HomeWindow(self)
        self.load_window.show()